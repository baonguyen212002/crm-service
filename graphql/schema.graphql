"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
scalar Upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)
}

type Mutation {
    userCreate(
        input: UserCreateInput @spread
    ):User

    userUpdate(
        input: UserUpdateInput @spread
    ):User

    userDelete(
        input: UserDeleteInput @spread
    ):Boolean

    userProfileUpdate (
        input: UserProfileUpdateInput @spread
    ):UserProfile
}

#extend type Mutation @guard{
#
#}

input UserCreateInput {
    type: UserType
    name: String
    email: String
    phone: String
    password: String
    status: UserStatus
    role: String
}

input UserUpdateInput {
    id: ID!
    name: String
    currentPassword: String @rename(attribute: "current_password")
    password: String
}

input UserDeleteInput{
    id: [ID!]!
}

input UserProfileUpdateInput{
    id: ID!
    avatar:String
    phone: String
    address: String
    city: String
}


"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type UserProfile {
    avatar: String
    phone: String
    address: String
    city: String
}
#import models/*.graphql
